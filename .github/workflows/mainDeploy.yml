name: Deploy with Docker Compose
on:
  push:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
 
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 18
 
      - name: Install pnpm
        run: npm install -g pnpm

      - name: install dependencies
        run: pnpm install
      
      - name: Generate Environment Variables File
        run: |
          echo "SERVER_PORT=$SERVER_PORT" >> .env
          echo "SERVER_URL=$SERVER_URL" >> .env
          echo "KAKAO_CLIENT_ID=$KAKAO_CLIENT_ID" >> .env
          echo "GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID" >> .env
          echo "KAKAO_REDIRECT_URI=$KAKAO_REDIRECT_URI" >> .env
          echo "GOOGLE_REDIRECT_URI=$GOOGLE_REDIRECT_URI" >> .env
          echo "GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET" >> .env
          echo "CLIENT_URL=$CLIENT_URL" >> .env
          echo "DATABASE_URL=$DATABASE_URL" >> .env
          echo "JWT_SECRET=$JWT_SECRET" >> .env
        working-directory: .
        env:
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          SERVER_URL: ${{ secrets.SERVER_URL }}
          KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID}}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          KAKAO_REDIRECT_URI: ${{ secrets.KAKAO_REDIRECT_URI }}
          GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          CLIENT_URL: ${{ secrets.CLIENT_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        
      - name: build
        run: pnpm turbo run build

      - name: run unit tests
        run: pnpm turbo run test

      - name: run integration tests
        run: pnpm turbo run test:integ

      - name: download playwright browsers
        run: pnpm exec playwright install
        working-directory: ./apps/client

      - name: run E2E test
        run: pnpm turbo run test:e2e

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PW }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        run: |
          docker compose build
          docker compose push

      - name: Pull and restart Docker Container
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.SSH_KEY }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          script: |
            cd ./kkoo
            docker compose down
            docker compose pull
            docker compose up -d
            docker image prune -f
            sudo systemctl restart nginx
