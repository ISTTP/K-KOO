// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId          String   @id @default(dbgenerated("nanoid(10)")) @db.VarChar(10) // 유저 아이디 (기본키) 
  id              String // 아이디
  password        String? // 비밀번호 (선택적)
  nickname        String // 닉네임
  birthday        DateTime // 생일
  point           Int      @default(0) // 포인트, 기본값으로 0 설정
  loginType       String // 로그인 타입
  sheetColor      String? // 시트 색깔 (선택적)
  creamColor      String? // 크림 색깔 (선택적)
  createdAt       DateTime @default(now()) // 생성 날짜
  updatedAt       DateTime @updatedAt // 수정 날짜
  sentLetters     Letter[] @relation("SentLetters") // 발신 편지들과의 관계
  receivedLetters Letter[] @relation("ReceivedLetters") // 수신한 편지들과의 관계
}

model Letter {
  letterId    Int      @id @default(autoincrement()) // 편지 아이디 (기본키)
  senderId    String // 발신자 유저 아이디 (외래키)
  recipientId String // 수신자 유저 아이디 (외래키)
  candleId    Int // 촛불 타입 (외래키)
  nickname    String // 닉네임
  contents    String // 내용
  keyword     String // 키워드
  year        Int // 연도
  createdAt   DateTime @default(now()) // 생성 날짜
  sender      User     @relation("SentLetters", fields: [senderId], references: [userId]) // 발신자와의 관계
  recipient   User     @relation("ReceivedLetters", fields: [recipientId], references: [userId]) // 수신자와의 관계
  candle      Candle   @relation("CandleLetters", fields: [candleId], references: [candleId]) // 촛불 타입과의 관계
}

model Candle {
  candleId Int      @id @default(autoincrement()) // 촛불 아이디 (기본키)
  imageUrl String // 이미지 주소
  point    Int // 포인트
  letters  Letter[] @relation("CandleLetters") // 편지들과의 관계
}
